apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${SERVICE_NAME}
  namespace: ${NS}
  labels:
    app.kubernetes.io/name: ${SERVICE_NAME}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: ${SERVICE_NAME}
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ${SERVICE_NAME}
    spec:
      terminationGracePeriodSeconds: 0
      containers:
        - name: ${SERVICE_NAME}
          image: hashicorp/http-echo
          imagePullPolicy: IfNotPresent
          args:
            - -listen=:3000
            - -text=${SERVICE_NAME}
          ports:
            - name: app-port
              containerPort: 3000
          resources:
            requests:
              cpu: 0.125m
              memory: 50Mi
            limits:
              cpu: 0.25m
              memory: 100Mi
---
apiVersion: v1
kind: Service
metadata:
  name: ${SERVICE_NAME}
  namespace: ${NS}
  labels:
    app.kubernetes.io/name: ${SERVICE_NAME}
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: ${SERVICE_NAME}
  ports:
    - name: svc-port
      port: 80
      targetPort: app-port
      protocol: TCP

# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: ${NS}-ingress
#   namespace: ${NS}
# spec:
#   ingressClassName: nginx
#   rules:
#     - http:
#         paths:
#           - path: /first
#             pathType: Prefix
#             backend:
#               service:
#                 name: first
#                 port:
#                   name: svc-port
#           - path: /second
#             pathType: Prefix
#             backend:
#               service:
#                 name: second
#                 port:
#                   name: svc-port